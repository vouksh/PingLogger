# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net
# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: 'PingLogger.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  outputDirectory: '$(Pipeline.Workspace)/s/bin/Release/net5.0/Win64'
  
steps:
- task: NuGetToolInstaller@1

- task: PowerShell@2
  displayName: 'Inno setup download'
  inputs:
    targetType: 'inline'
    script: 'choco install innosetup'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build'

- script: dotnet publish $(project) --configuration $(buildConfiguration) /p:PublishProfile=Win64 -o $(outputDirectory)
  displayName: 'dotnet publish'

- task: CopyFiles@2
  displayName: 'Copy installer script to base dir'
  inputs:
    SourceFolder: 'Installer/'
    Contents: 'installscript.iss'
    TargetFolder: '$(Pipeline.Workspace)/s/'

# Execute install script
- task: PowerShell@2
  displayName: 'Execute Inno Setup script'
  inputs:
    targetType: 'inline'
    script: 'iscc.exe installscript.iss'

# Copy setup into ArtifactStaging folder
- task: CopyFiles@2
  displayName: 'Copy setup to artifact'
  inputs:
    SourceFolder: 'Installer/Output'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  displayName: 'publish artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'pipeline'

- task: FtpUpload@2
  inputs:
    credentialsOption: 'serviceEndpoint'
    serverEndpoint: 'PingLogger FTP'
    rootDirectory: '$(Build.ArtifactStagingDirectory)'
    filePatterns: '**'
    remoteDirectory: '/3.0.2/win/setup/'
    clean: false
    cleanContents: true
    preservePaths: true
    trustSSL: true
