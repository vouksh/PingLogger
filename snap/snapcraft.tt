<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension="yaml" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#
    string output = File.ReadAllText(this.Host.ResolvePath("../AssemblyInfo.cs"));
    Regex pattern = new Regex("AssemblyVersion\\(\"(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<revision>\\d+)\\.(?<build>\\d+)\"\\)");
    MatchCollection matches = pattern.Matches(output);
    if( matches.Count == 1 )
    {
        major = Convert.ToInt32(matches[0].Groups["major"].Value);
        minor = Convert.ToInt32(matches[0].Groups["minor"].Value);
        revision = Convert.ToInt32(matches[0].Groups["revision"].Value);
    }
#>
name: pinglogger
base: core18
version: '<#= this.major #>.<#= this.minor #>.<#= this.revision #>' # just for humans, typically '1.2+git' or '1.3.2'
summary: Advanced cross-platform ping logger
description: |
 Cross-platform Ping Logger capable of pinging
 multiple hosts at once, with variable timers,
 packet size, warning thresholds, and timeouts

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

apps:
  pinglogger:
    command: PingLogger

parts:
  pinglogger:
    source: .
    plugin: dotnet

<#+
    int major = 1;
    int minor = 0;
    int revision = 0;
#>